interface Exception E
  = exception : E -> Zero

throw : E -> [Exception E]X
throw e = on (exception e) {}

catch : <Exception E>X -> Either E X
catch x = right x
catch <exception e -> _> = left e

-- catch : <Abort>X -> {X} -> X
-- catch x               h = x
-- catch <aborting -> k> h = h!

-- note 
--   catch [Exception E ? X] [] Either E X
--   catch [x]            = right x  
--   catch [throw e ? k]  = left e

-- note
-- catch' [Exception E ? X] [] Maybe X
-- catch' [x]            = just x
-- catch' [throw e ? k]  = nothing

-- note Usage example, needs Nat.fk

--   ex [Exception Char] Char
--   ex = 'a' >> throw 'b'

--   note
--   main [] Maybe Char
--   main = catch' ? ex!

--   main [] Either Char Nat
--   main = left 'a'

